rootProject.name = 'boot3Scaffold'

dependencyResolutionManagement {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/spring/' }
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url 'https://repo.spring.io/release' }
        mavenCentral()
    }

    versionCatalogs {
        libs {
            version('springBootVersion', '3.3.2')
            version('lombok', '1.18.32')
            version('disruptor', '3.4.4')
            version('jackson', '2.17.2')
            version('modelMapper', '3.2.0')
            version('fastjson2', '2.0.52')
            version('hutool', '5.8.27')
            version('google-guava', '33.2.1-jre')
            version('commons-lang3', '3.14.0')
            version('commons-text', '1.12.0')

            plugin('boot-starter', 'org.springframework.boot').versionRef('springBootVersion')
            plugin('dependency-management', 'io.spring.dependency-management').version('1.1.6')

            //------------------------------------------------------boot----------------------------------------------------------//
            library('spring-boot-dependencies', 'org.springframework.boot', 'spring-boot-dependencies').versionRef('springBootVersion')
            library('spring-boot-starter', 'org.springframework.boot', 'spring-boot-starter').versionRef('springBootVersion')
            library('web', 'org.springframework.boot', 'spring-boot-starter-web').versionRef('springBootVersion')
            library('log4j2', 'org.springframework.boot', 'spring-boot-starter-log4j2').versionRef('springBootVersion')

            //------------------------------------------------------数据库----------------------------------------------------------//
            library('mongodb', 'org.springframework.boot', 'spring-boot-starter-data-mongodb').versionRef('springBootVersion')
            library('jdbc', 'org.springframework.boot', 'spring-boot-starter-data-jdbc').versionRef('springBootVersion')

            //------------------------------------------------------工具类----------------------------------------------------------//
            library('lombok', 'org.projectlombok', 'lombok').versionRef('lombok')
            //异步打印日志所需驱动类
            library('disruptor', 'com.lmax', 'disruptor').versionRef('disruptor')
            //jackson
            library('jackson-databind', 'com.fasterxml.jackson.core', 'jackson-databind').versionRef('jackson')
            library('jackson-jsr310', 'com.fasterxml.jackson.datatype', 'jackson-datatype-jsr310').versionRef('jackson')
            //modelMapper
            library('modelMapper', 'org.modelmapper', 'modelmapper').versionRef('modelMapper')
            //fastjson
            library('fastjson2', 'com.alibaba.fastjson2', 'fastjson2').versionRef('fastjson2')
            //hutool
            library('hutool', 'cn.hutool', 'hutool-all').versionRef('hutool')
            //goolge
            library('google-guava', 'com.google.guava', 'guava').versionRef('google-guava')
            //commons
            library('commons-lang3', 'org.apache.commons', 'commons-lang3').versionRef('commons-lang3')
            library('commons-text', 'org.apache.commons', 'commons-text').versionRef('commons-text')
        }
    }

}